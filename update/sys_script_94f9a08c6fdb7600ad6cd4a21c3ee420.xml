<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_label/>
        <action_name/>
        <action_query>false</action_query>
        <action_run_at>server</action_run_at>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <application/>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_casus_csm_case</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_casus_csm_case">active=true^numberISNOTEMPTY^EQ<item endquery="false" field="active" goto="false" newquery="false" operator="=" or="false" value="true"/>
            <item endquery="false" field="number" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Provision User with Case Management Role</name>
        <onclick/>
        <order>100</order>
        <priority>100</priority>
        <read_access_action>false</read_access_action>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	//check end user role, if they already have the role, do nothing. Else, give them the role.
	var role = new GlideRecord('sys_user_has_role');
	role.addQuery('user', current.client);
	role.addQuery('role', '1a2dc3ef0f43760012e4348ce1050e8a'); //x_casus_csm.user
	role.query();
	
	if(role.next()) {
		return;
	} else {
		role.initialize();
		
		role.user = current.client;
		role.role = '1a2dc3ef0f43760012e4348ce1050e8a'; //x_casus_csm.user
		role.insert();
		
		gs.info("BR - Provision User with Case Management Role - user " + " provisioned with role " + role.role);
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>nicholasmyers</sys_created_by>
        <sys_created_on>2017-06-06 22:34:19</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_id>94f9a08c6fdb7600ad6cd4a21c3ee420</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>Provision User with Case Management Role</sys_name>
        <sys_overrides/>
        <sys_package display_value="Case Management" source="x_casus_csm">c62dcf2f0f43760012e4348ce1050e5f</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Case Management">c62dcf2f0f43760012e4348ce1050e5f</sys_scope>
        <sys_update_name>sys_script_94f9a08c6fdb7600ad6cd4a21c3ee420</sys_update_name>
        <sys_updated_by>nicholasmyers</sys_updated_by>
        <sys_updated_on>2017-06-06 22:49:51</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
</record_update>
