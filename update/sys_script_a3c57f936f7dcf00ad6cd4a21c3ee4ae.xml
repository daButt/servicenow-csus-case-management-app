<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_label/>
        <action_name/>
        <action_query>false</action_query>
        <action_run_at>server</action_run_at>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <application/>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>incident</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="incident">active=true^assignment_groupVALCHANGES^ORcaller_idVALCHANGES^caller_idISNOTEMPTY^caller_id.u_member_ofLIKEuniv-staff-all^ORcaller_id.u_member_ofLIKEuniv-faculty-all^ORcaller_id.u_member_ofLIKEcsus-staff-everyone^ORcaller_id.u_member_ofLIKEcsus-faculty-everyone^EQ<item endquery="false" field="active" goto="false" newquery="false" operator="=" or="false" value="true"/>
            <item endquery="false" field="assignment_group" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="false" field="caller_id" goto="false" newquery="false" operator="VALCHANGES" or="true" value=""/>
            <item endquery="false" field="caller_id" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="false" field="caller_id.u_member_of" goto="false" newquery="false" operator="LIKE" or="false" value="univ-staff-all"/>
            <item endquery="false" field="caller_id.u_member_of" goto="false" newquery="false" operator="LIKE" or="true" value="univ-faculty-all"/>
            <item endquery="false" field="caller_id.u_member_of" goto="false" newquery="false" operator="LIKE" or="true" value="csus-staff-everyone"/>
            <item endquery="false" field="caller_id.u_member_of" goto="false" newquery="false" operator="LIKE" or="true" value="csus-faculty-everyone"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Incident Case Create / Update Rules</name>
        <onclick/>
        <order>100</order>
        <priority>100</priority>
        <read_access_action>false</read_access_action>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	/* This business rule handles how and when cases are created from incidents.
	
	*/
	var groupMap;
	var user;
		
	if(current.assignment_group.u_manages_cases) {
		
		groupMap = findGroupMap(current.assignment_group);
		user = current.caller_id;	

		if(user == '') {
			current.u_case = '';
			current.update();
			
			return;

		} else {
			if(current.u_case == '') {
				
				//determine if a case exists for this person
				var currentCase = new GlideRecord('x_casus_csm_case');
				currentCase.addActiveQuery();
				currentCase.addQuery('client', user);
				currentCase.addQuery('assignment_group', groupMap);
				currentCase.setLimit(1);
				currentCase.query();

				if(currentCase.next()) { 

					currentCase.incident_notes = current.number + " has been added to this case";
					currentCase.update();

				} else { 

					currentCase.initialize();
					currentCase.client = user;
					currentCase.assignment_group = groupMap;
					currentCase.incident_notes = current.number + " has been added to this case";
					currentCase.insert();

				}

				current.setValue('u_case', currentCase.getValue('sys_id'));
				current.update();
			}
		}

	} else { //the assignment group doesn't manage cases
			
		//if it has a case, it can be removed from the case
		if(current.u_case != '') {
				
			var caseGr = new GlideRecord('x_casus_csm_case');
			//update the case with worknotes
			caseGr.get(current.u_case);
			caseGr.incident_notes = current.number + " has been removed from this case.";
			caseGr.update(); 
				
			//current.work_notes = "This incident was removed from " + current.u_case.number;
			current.u_case = '';
			current.update();
		}	
	}
	
	
	//searches the assignment group to Case Team map table to determine which team to send the case to
	//defaults to the task assignment group if no mapping is found 
	function findGroupMap(groupID) {
		
		var groupMapGr = new GlideRecord('x_casus_csm_case_team_map');
		groupMapGr.addQuery('record_assignment_group', groupID);
		groupMapGr.setLimit(1);
		groupMapGr.query();
		
		if(groupMapGr.next()) {
			return groupMapGr.case_team;
		} else {
			
			return groupID;
		}
	}

})(current, previous);

]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>nicholasmyers</sys_created_by>
        <sys_created_on>2017-10-19 22:18:14</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_id>a3c57f936f7dcf00ad6cd4a21c3ee4ae</sys_id>
        <sys_mod_count>54</sys_mod_count>
        <sys_name>Incident Case Create / Update Rules</sys_name>
        <sys_overrides/>
        <sys_package display_value="Case Management" source="x_casus_csm">c62dcf2f0f43760012e4348ce1050e5f</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Case Management">c62dcf2f0f43760012e4348ce1050e5f</sys_scope>
        <sys_update_name>sys_script_a3c57f936f7dcf00ad6cd4a21c3ee4ae</sys_update_name>
        <sys_updated_by>nicholasmyers</sys_updated_by>
        <sys_updated_on>2017-10-27 21:38:09</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
</record_update>
